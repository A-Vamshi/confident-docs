paths:
  /v1/metric-collections:
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
    get:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/metric-collections/{id}:
    put:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The id of the metric collection you want to update.
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/datasets:
    get:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
        - in: query
          name: alias
          required: true
          schema:
            type: string
          description: The unique alias of the dataset.
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/evaluate:
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/simulate:
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/traces:
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
    get:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
        - in: query
          name: page
          required: false
          schema:
            type: integer
            minimum: 1
          description: This specifies the page number of the traces to return. Defaulted to 1.
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
          description: This specifies the maximum number of traces per page.  Defaulted to 25.
        - in: query
          name: environment
          required: false
          schema:
            type: string
          description: This filters the traces by the environment where the trace was created, and returns traces from all environments if not specified.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date-time
          description: This filters for traces created after the specified start datetime. Defaulted to 30 days ago.
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date-time
          description: This filters for traces created before the specified end datetime. Defaulted to the current time.
        - in: query
          name: sortBy
          required: false
          schema:
            type: enum
            enum: [created_at, ended_at]
          description: This determines the field to sort by. Defaulted to `created_at`.
        - in: query
          name: ascending
          required: false
          schema:
            type: boolean
          description: This determines if the field specified in `sortBy` should be in ascending order. Defaults to `false`.

  /v1/traces/{uuid}:
    put:
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: The UUID of the trace you wish to update.
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/evaluate/threads/{id}:
    post:
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the thread you wish to evaluate.
          schema:
            type: string
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/evaluate/traces/{uuid}:
    post:
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the trace you wish to evaluate.
          schema:
            type: string
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/evaluate/spans/{uuid}:
    post:
      parameters:
        - in: path
          name: uuid
          required: true
          description: The UUID of the span you wish to evaluate.
          schema:
            type: string
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/prompts:
    get:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
        - in: query
          name: alias
          required: true
          schema:
            type: string
          description: The unique alias of the prompt.
        - in: query
          name: version
          required: false
          schema:
            type: string
          example: "1.2.3"
          description: The version of the prompt you want to pull.
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"

  /v1/annotation:
    post:
      parameters:
        - in: header
          name: CONFIDENT_API_KEY
          required: true
          description: The API key of your Confident AI project.
          schema:
            type: string
          example: "<PROJECT-API-KEY>"
