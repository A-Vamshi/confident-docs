openapi: 3.1.0
info:
  title: Confident AI Metrics API
  version: 1.0.0

servers:
  - x-fern-server-name: Confident AI
    url: https://api.confident-ai.com/

tags:
  - name: Metric Collections
    description: Metric Collection API
    externalDocs:
      description: Learn about metric collection
  - name: Datasets
    description: Confident AI Datasets API
    externalDocs:
      description: Learn about datasets
  - name: Evaluation
    description: Run your evals using API
    externalDocs:
      description: Learn about evaluations
  - name: Tracing
    description: Run your evals using API
    externalDocs:
      description: Learn about tracing

paths:
  /v1/traces:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Tracing
      summary: Trace Ingestion
      operationId: createTrace
      description: You can use this endpoint to ingest traces manually.
      requestBody:
        description: Create a trace ingestion
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/CreateTrace"

      responses:
        "200":
          description: Response of a create trace API call when it succeeds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTraceResponse"

  /v1/traces/{uuid}:
    put:
      x-fern-server-name: Confident AI
      tags:
        - Tracing
      summary: Update Trace
      operationId: updateTrace
      description: You can use this endpoint to udate traces manually.
      requestBody:
        description: Create a trace ingestion
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/UpdateTrace"

      responses:
        "200":
          description: Response of a create trace API call when it succeeds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTraceResponse"
      
  /v1/evaluate/threads/{id}:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Tracing
      summary: Evaluate Thread
      description: Triggers evaluation of a thread using a specified metric collection and optional chatbot role instructions.
      operationId: evaluateThread
      parameters:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateThreadRequest'
      responses:
        "200":
          description: Response of a create trace API call when it succeeds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateThreadResponse"

  /evaluate/traces/{uuid}:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Tracing
      summary: Evaluate Trace
      operationId: evaluateTrace
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the trace to evaluate
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateTraceRequest'
      responses:
        "200":
          description: Response of a create trace API call when it succeeds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateTraceResponse"
              
  /evaluate/spans/{uuid}:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Tracing
      summary: Evaluate Span
      operationId: evaluateSpan
      parameters:
        - name: uuid
          in: path
          required: true
          description: The UUID of the span to evaluate
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateSpanRequest'
      responses:
        "200":
          description: Response of a create trace API call when it succeeds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateSpanResponse"

  /v1/metric-collections:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Metric Collections
      summary: Add Collection
      operationId: createMetricCollection
      description: Creates a metric collection with the `name` and the `metricSettings` you specified.
      requestBody:
        description: Create a metric collection
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMetricCollection"
            examples:
              SingleTurn:
                summary: Single-Turn Collection
                value:
                  name: "Collection Name"
                  multiTurn: false
              MultiTurn:
                summary: Multi-Turn Collection
                value:
                  name: "Collection Name"
                  multiTurn: true
              MetricSettings:
                summary: With Metric Settings
                value:
                  name: "Collection Name"
                  multiTurn: false
                  metricSettings:
                    - metric:
                        name: Answer Relevancy
                        threshold: 0.8

      responses:
        "200":
          description: Metric Collection successfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMetricResponse"
              examples:
                SingleTurn:
                  summary: Single-Turn Collection
                  value:
                    success: true
                    data:
                      id: METRIC-COLLECTION-ID
                MultiTurn:
                  summary: Multi-Turn Collection
                  value:
                    success: true
                    data:
                      id: METRIC-COLLECTION-ID
                MetricSettings:
                  summary: With Metric Settings
                  value:
                    success: true
    get:
      x-fern-server-name: Confident AI
      tags:
        - Metric Collections
      summary: List Metric Collections
      operationId: listMetricCollections
      description: Lists all the metric collections available in your Confident AI account.
      responses:
        "200":
          description: Metric Collections retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMetricCollectionResponse"
              examples:
                example1:
                  summary: Get all Metric Collections
                  value:
                    success: true
                    data:
                      metricCollections:
                        - id: "COLLECTION-ID"
                          name: "New Collection Name"
                          multiTurn: false
                          metricSettings:
                            - metric:
                                name: "Faithfulness"
                              activated: true
                              threshold: 0.5
                              includeReason: true
                              strictMode: false

  /v1/metric-collections/{id}:
    put:
      x-fern-server-name: Confident AI
      tags:
        - Metric Collections
      summary: Update Collection
      operationId: updateMetricCollection
      description: Updates a metric collection with the `name` and `metricSettings` you provide for metric collection bearing the `id` you give.
      requestBody:
        description: Update a metric collection
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMetricCollection"
            examples:
              UpdateCollection:
                summary: Update Metric Collection Example
                value:
                  name: "New Collection Name"
                  multiTurn: false
                  metricSettings:
                    - metric:
                        name: "Faithfulness"
                      threshold: 0.5
      responses:
        "200":
          description: Metric Collection successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMetricCollectionResponse"
              examples:
                UpdateCollection:
                  summary: Update Metric Collection Example
                  value:
                    success: true
  /v1/datasets:
    get:
      x-fern-server-name: Confident AI
      tags:
        - Datasets
      summary: Pull Datasets
      operationId: getDatasetByAlias
      description: Returns a dataset by its alias. The dataset may include either single-turn `goldens` or multi-turn `conversationalGoldens`.
      responses:
        "200":
          description: Dataset retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDatasetResponse"
              examples:
                SingleTurn:
                  summary: Single-turn dataset
                  value:
                    success: true
                    data:
                      datasetId: "DATASET-ID"
                      goldens:
                        - input: "How's the weather like in NYC?"
                          expectedOutput: "No idea"
                MultiTurn:
                  summary: Multi-turn dataset
                  value:
                    success: true
                    data:
                      datasetId: "DATASET-ID"
                      conversationalGoldens:
                        - scenario: "Booking a hotel"
                          expectedOutcome: "Successfully booked"
                          userDescription: "Finds hotels in NYC"
  /v1/evaluate:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Evaluation
      summary: Run LLM Evals
      operationId: evaluateLLM
      description: Run online evals for your test cases using the metrics in `metricCollection`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateRequest"
            examples:
                SingleTurn:
                  summary: Single-Turn
                  value:
                    metricCollection: "Collection Name"
                    testCases: 
                      input: "How tall is mount everest?"
                      actualOutput: "No clue, pretty tall I guess?"
                MultiTurn:
                  summary: Multi-Turn
                  value:
                    metricCollection: "Multi-Turn Collection Name"
                    testCases:
                      - turns:
                          - role: user
                            content: "How tall is Mount Everest?"
                          - role: assistant
                            content: "Mount Everest is approximately 8,848 meters tall."
                          - role: user
                            content: "Wow, that is really high! Has that changed recently?"
                          - role: assistant
                            content: "Yes, a 2020 survey by China and Nepal revised the height to 8,848.86 meters."
                LogParameters:
                  summary: Logging Parameters
                  value:
                    metricCollection: "Collection Name"
                    testCases: 
                      input: "How tall is mount everest?"
                      actualOutput: "No clue, pretty tall I guess?"
                    hyperparameters:
                      model: "gpt-40-mini"
                      prompt-version: "ai_generation_v2"
                LogIdentifier:
                  summary: Logging Identifier
                  value:
                    metricCollection: "Collection Name"
                    testCases: 
                      input: "How tall is mount everest?"
                      actualOutput: "No clue, pretty tall I guess?"
                    identifier: "run-399-102"
      responses:
        "200":
          description: Successful Evaluation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateResponse"
              examples:
                SingleTurn:
                  summary: Single-Turn
                  value:
                    success: true
                    data:
                      id: "TEST-RUN-ID"
                MultiTurn:
                  summary: Multi-Turn
                  value:
                    success: true
                    data:
                      id: "MULTITURN-TEST-RUN-ID"
                LogParameters:
                  summary: Logging Parameters
                  value:
                    success: true
                    data:
                      id: "MULTITURN-TEST-RUN-ID"
                LogIdentifier:
                  summary: Logging Identifier
                  value:
                    success: true
                    data:
                      id: "MULTITURN-TEST-RUN-ID"

  /v1/simulate:
    post:
      x-fern-server-name: Confident AI
      tags:
        - Evaluation
      summary: Simulate Conversation
      operationId: simulateConversation
      description: Simulate conversations for your `goldens` along with existing turns.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulateRequest"
            examples:
              example1:
                summary: Basic simulation example
                value:
                  golden:
                    scenario: "A frustrated user asking for a refund."
                    userDescription: "A white male who is a customer for over 2 years."
                  existingTurns:
                    - role: "assistant"
                      content: "Hey, how can I help you today?"
      responses:
        "200":
          description: Successful Simulation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulateResponse"
              examples:
                example1:
                  summary: Basic simulation example
                  value:
                    success: true
                    data:
                      simulationId: "SIMULATION-ID"
                      completed: false
                      userResponse: "I'd like my refund please."
                      turns:
                        - role: "assistant"
                          content: "Hey, how can I help you today?"
                        - role: "user"
                          content: "I'd like my refund please."

components:
  schemas:
    CreateMetricCollection:
      type: object
      description: Request schema to create or update a metric collection
      properties:
        name:
          type: string
          description: Name of the metric collection
        multiTurn:
          type: boolean
        metricSettings:
          type: array
          description: List of metric settings for the collection
          items:
            type: object
            properties:
              metric:
                type: object
                properties:
                  name:
                    type: string
                  criteria:
                    type: string
                  evaluationSteps:
                    type: string
                  evaluationParams:
                    type: array
                  multiTurn:
                    type: boolean
                required:
                  - name
              activated:
                type: boolean
              threshold:
                type: number
              includeReason:
                type: boolean
              strictMode:
                type: boolean
            required:
              - metric
      required:
        - name
        - multiTurn

    CreateMetricResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string
          required:
            - id
      required:
        - success

    UpdateMetricCollectionResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success

    GetMetricCollectionResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            metricCollections:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  multiTurn:
                    type: boolean
                  metricSettings:
                    type: array
                    items:
                      type: object
                      properties:
                        metric:
                          type: object
                          properties:
                            name:
                              type: string
                        activated:
                          type: boolean
                        threshold:
                          type: number
                          minimum: 0
                          maximum: 1
                        includeReason:
                          type: boolean
                        strictMode:
                          type: boolean
                      required:
                        - metric
                        - activated
                        - threshold
                        - includeReason
                        - strictMode
                required:
                  - id
                  - name
                  - multiTurn
                  - metricSettings
          required:
            - metricCollections
      required:
        - success
        - data

    Golden:
      type: object
      properties:
        input:
          type: string
        expectedOutput:
          type: string
          nullable: true
        actualOutput:
          type: string
          nullable: true
        context:
          type: array
          items:
            type: string
          nullable: true
        retrievalContext:
          type: array
          items:
            type: string
          nullable: true
        expectedTools:
          type: array
          items:
            type: string
          nullable: true
        toolsCalled:
          type: array
          items:
            type: string
          nullable: true
        additionalMetadata:
          type: object
          nullable: true
        comments:
          type: string
          nullable: true
        sourceFile:
          type: string
          nullable: true
        customColumnKeyValues:
          type: object
          additionalProperties:
            type: string
      required:
        - input


    ConversationalGolden:
      type: object
      properties:
        scenario:
          type: string
        userDescription:
          type: string
          nullable: true
        expectedOutcome:
          type: string
          nullable: true
        turns:
          type: array
          items:
            type: object
          nullable: true
        context:
          type: array
          items:
            type: string
          nullable: true
        additionalMetadata:
          type: object
          nullable: true
        comments:
          type: string
          nullable: true
        sourceFile:
          type: string
          nullable: true
        customColumnKeyValues:
          type: object
          additionalProperties:
            type: string
      required:
        - scenario

    GetDatasetResponse:
      type: object
      properties:
        success: 
          type: boolean
        data:
          oneOf:
            - type: object
              properties:
                datasetId:
                  type: string
                goldens:
                  type: array
                  items:
                    $ref: '#/components/schemas/Golden'
              required:
                - datasetId
                - goldens
            - type: object
              properties:
                datasetId:
                  type: string
                conversationalGoldens:
                  type: array
                  items:
                    $ref: '#/components/schemas/ConversationalGolden'
              required:
                - datasetId
                - conversationalGoldens
      required:
        - success
        - data


    LLMTestCase:
      type: object
      properties:
        input:
          type: string
        actualOutput:
          type: string
        expectedOutput:
          type: string
        retrievalContext:
          type: array
          items:
            type: string
        toolsCalled:
          type: array
        expectedTools:
          type: array
      required:
        - input
        - actualOutput

    Turn:
      type: object
      properties:
        role:
          type: string
          enum: [user, assistant]
        content:
          type: string
        retrievalContext:
          type: array
          items:
            type: string
        toolsCalled:
          type: array
      required:
        - role
        - content

    ConversationalTestCase:
      type: object
      properties:
        turns:
          type: array
          items:
            $ref: "#/components/schemas/Turn"
        scenario:
          type: string
        expectedOutcome:
          type: string
        userDescription:
          type: string
        chatbotRole:
          type: string
      required:
        - turns

    EvaluateRequest:
      type: object
      properties:
        metricCollection:
          type: string
        testCases:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/LLMTestCase"
              - $ref: "#/components/schemas/ConversationalTestCase"
        hyperparameters:
          type: object
          additionalProperties: true
        identifier:
          type: string
      required:
        - metricCollection
        - testCases

    EvaluateResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string

    SimulateRequest:
      type: object
      properties:
        golden:
          type: object
          properties:
            scenario:
              type: string
            userDescription:
              type: string
          required:
            - scenario
        existingTurns:
          type: array
          items:
            $ref: "#/components/schemas/Turn"
      required:
        - golden
        - existingTurns

    SimulateResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            simulationId:
              type: string
            completed:
              type: boolean
            userResponse:
              type: string
            turns:
              type: array
              items:
                $ref: "#/components/schemas/Turn"
    BaseSpan:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Unique identifier for the span.
        name:
          type: string
        input:
          description: Input to the span.
        output:
          description: Output from the span.
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      required:
        - uuid
        - name
        - startTime
        - endTime

    LlmSpan:
      allOf:
        - $ref: '#/components/schemas/BaseSpan'
        - type: object
          properties:
            model:
              type: string
            costPerInputToken:
              type: number
              format: float
            costPerOutputToken:
              type: number
              format: float
            inputTokenCount:
              type: integer
            outputTokenCount:
              type: integer
          required:
            - model

    RetrieverSpan:
      allOf:
        - $ref: '#/components/schemas/BaseSpan'
        - type: object
          properties:
            embedder:
              type: string
            topK:
              type: integer
            chunkSize:
              type: integer
          required:
            - embedder

    ToolSpan:
      allOf:
        - $ref: '#/components/schemas/BaseSpan'
        - type: object
          properties:
            description:
              type: string

    AgentSpan:
      allOf:
        - $ref: '#/components/schemas/BaseSpan'
        - type: object
          properties:
            availableTools:
              type: array
              items:
                type: string
            agentHandoffs:
              type: array
              items:
                type: string

    ToolCall:
      type: object
      properties:
        name:
          type: string
        parameters:
          type: object
          additionalProperties: true
    
    Trace:
      type: object
      required:
        - uuid
        - startTime
        - endTime
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        input:
          description: Input to the trace
        output:
          description: Output from the trace
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        environment:
          type: string
          enum: [production, development, staging, testing]
        metadata:
          type: object
          additionalProperties: true
        tags:
          type: array
          items:
            type: string
        baseSpans:
          type: array
          items:
            $ref: '#/components/schemas/BaseSpan'
        llmSpans:
          type: array
          items:
            $ref: '#/components/schemas/LlmSpan'
        retrieverSpans:
          type: array
          items:
            $ref: '#/components/schemas/RetrieverSpan'
        toolSpans:
          type: array
          items:
            $ref: '#/components/schemas/ToolSpan'
        agentSpans:
          type: array
          items:
            $ref: '#/components/schemas/AgentSpan'
        threadId:
          type: string
        userId:
          type: string
        metricCollection:
          type: string
        retrievalContext:
          type: array
          items:
            type: string
        context:
          type: array
          items:
            type: string
        expectedOutput:
          type: string
        toolsCalled:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
        expectedTools:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'

    CreateTrace:
      allOf:
        - $ref: '#/components/schemas/Trace'
    
    CreateTraceResponse:
      type: object
      properties:
        success: 
          type: boolean
          description: A boolean indicating the success or failure of the API call
        data:
          type: object
          properties:
            id: 
              type: string
      required:
        - success
        - data
    
    UpdateTrace:
      type: object
      properties:
        output:
          description: Updated output for the trace
        endTime:
          type: string
          format: date-time
          description: Updated end time in ISO 8601 format
        metadata:
          type: object
          additionalProperties: true
          description: Arbitrary metadata to attach to the trace
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the trace
        
    UpdateTraceResponse:
      type: object
      properties:
        success: 
          type: boolean
          description: A boolean indicating the success or failure of the API call
      required:
        - success
  
    EvaluateThreadRequest:
      type: object
      required:
        - metricCollections
      properties:
        metricCollections:
          type: string
          description: Name of the metric collection to use for evaluation
        chatbotRole:
          type: string
          description: Instructions or role prompt given to the chatbot during evaluation (e.g., system prompt)

    EvaluateThreadResponse:
      type: object
      properties:
        success: 
          type: boolean
          description: A boolean indicating the success or failure of the API call
      required:
        - success

    EvaluateTraceRequest:
      type: object
      properties:
        metricCollections:
          type: string
          description: The name of the metric collection to use
      required:
        - metricCollections
    
    EvaluateTraceResponse:
      type: object
      properties:
        success: 
          type: boolean
          description: A boolean indicating the success or failure of the API call
      required:
        - success

    EvaluateSpanRequest:
        type: object
        properties:
          metricCollections:
            type: string
            description: The name of the metric collection to use
        required:
          - metricCollections
      
    EvaluateSpanResponse:
      type: object
      properties:
        success: 
          type: boolean
          description: A boolean indicating the success or failure of the API call
      required:
        - success